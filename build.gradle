plugins {
    id 'java'
    id 'com.diffplug.spotless' version '6.3.0'
}

group = 'rezero'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

spotless {
    java {
        target 'src/**/*.java'
        targetExclude ('src/generated/**/*.java', 'src/main/generated/**/*.java')
        importOrder('java', 'javax', 'rezero')
        removeUnusedImports()
        googleJavaFormat('1.13.0')
    }
}


dependencies {
    implementation 'org.apache.commons:commons-pool2:2.8.0'
    implementation 'org.apache.commons:commons-lang3:3.8.1'


    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
}

test {
    useJUnitPlatform()
}

test {
    testLogging {
        events = []
        exceptionFormat = 'full'
    }

    def GREEN = "\033[32m"
    def RED = "\033[31m"
    def YELLOW = "\033[33m"
    def RESET = "\033[0m"

    afterTest { desc, result ->
        def testName = desc.name // 只使用测试方法名
        if (result.resultType == TestResult.ResultType.SUCCESS) {
            println "${YELLOW}${testName}${RESET} ${GREEN}passed test${RESET}"
        } else {
            println "${YELLOW}${testName}${RESET} ${RED}failed test${RESET}"
        }
    }
}